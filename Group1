using System;
using System.Collections.Generic;

namespace BankApplication
{
    class Program
    {
        static Dictionary<string, string> accounts = new Dictionary<string, string>();
        static string currentUser = "";

        static void Main(string[] args)
        {
            Console.WriteLine("Welcome to the Bank Application!");

            while (true)
            {
                Console.WriteLine("1. Login");
                Console.WriteLine("2. Signup");
                Console.WriteLine("3. Quit");

                Console.Write("Choose an option: ");
                string choice = Console.ReadLine();

                switch (choice)
                {
                    case "1":
                        Login();
                        break;
                    case "2":
                        Signup();
                        break;
                    case "3":
                        Environment.Exit(0);
                        break;
                    default:
                        Console.WriteLine("Invalid option. Please try again.");
                        break;
                }
            }
        }

        static void Login()
        {
            int attempts = 3;

            while (attempts > 0)
            {
                Console.Write("Enter your email: ");
                string email = Console.ReadLine();

                Console.Write("Enter your password: ");
                string password = Console.ReadLine();

                if (accounts.ContainsKey(email) && accounts[email] == password)
                {
                    currentUser = email;
                    Console.WriteLine("Login successful!");
                    MainMenu();
                    return;
                }
                else
                {
                    attempts--;
                    Console.WriteLine($"Invalid email or password. {attempts} attempts left.");
                }
            }

            Console.WriteLine("You've exceeded the maximum number of login attempts.");
        }

        static void Signup()
        {
            Console.Write("Enter your name: ");
            string name = Console.ReadLine();

            Console.Write("Enter your age: ");
            int age;
            while (!int.TryParse(Console.ReadLine(), out age) || age < 18 || age > 80)
            {
                Console.WriteLine("Invalid age. Age must be between 18 and 80.");
                Console.Write("Enter your age: ");
            }

            Console.Write("Enter your email: ");
            string email = Console.ReadLine();
            while (!email.EndsWith("@gmail.com"))
            {
                Console.WriteLine("Invalid email. Email must end with '@gmail.com'.");
                Console.Write("Enter your email: ");
                email = Console.ReadLine();
            }

            Console.Write("Enter your password: ");
            string password = Console.ReadLine();
            while (password.Length < 8 || !ContainsSymbol(password))
            {
                Console.WriteLine("Invalid password. Password must be at least 8 characters long and contain at least one symbol.");
                Console.Write("Enter your password: ");
                password = Console.ReadLine();
            }

            accounts.Add(email, password);
            Console.WriteLine("Signup successful! You can now login.");
        }

        static bool ContainsSymbol(string password)
        {
            foreach (char c in password)
            {
                if (!char.IsLetterOrDigit(c))
                {
                    return true;
                }
            }
            return false;
        }

        static void MainMenu()
        {
            while (true)
            {
                Console.WriteLine("\n1. View Balance");
                Console.WriteLine("2. Deposit");
                Console.WriteLine("3. Withdraw");
                Console.WriteLine("4. Transfer Money");
                Console.WriteLine("5. Quit");

                Console.Write("Choose an option: ");
                string choice = Console.ReadLine();

                switch (choice)
                {
                    case "1":
                        // View Balance
                        Console.WriteLine("Balance: $1000"); // Placeholder value
                        break;
                    case "2":
                        // Deposit
                        Console.WriteLine("Deposit function placeholder.");
                        break;
                    case "3":
                        // Withdraw
                        Console.WriteLine("Withdraw function placeholder.");
                        break;
                    case "4":
                        // Transfer Money
                        Console.WriteLine("Transfer money function placeholder.");
                        break;
                    case "5":
                        Environment.Exit(0);
                        break;
                    default:
                        Console.WriteLine("Invalid option. Please try again.");
                        break;
                }
            }
        }
    }
}
